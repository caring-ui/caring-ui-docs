import{_ as t,c as d,o as e,a3 as a}from"./chunks/framework.ClEwN3w8.js";const g=JSON.parse('{"title":"caring-css","description":"","frontmatter":{},"headers":[],"relativePath":"module/caring-css.md","filePath":"module/caring-css.md","lastUpdated":1719564071000}'),s={name:"module/caring-css.md"},o=a(`<h1 id="caring-css" tabindex="-1">caring-css <a class="header-anchor" href="#caring-css" aria-label="Permalink to &quot;caring-css&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">介绍</p><p>全端通用的轻量原子样式库，语法兼容 <code>tailwindcss</code></p></div><h2 id="快速上手" tabindex="-1">快速上手 <a class="header-anchor" href="#快速上手" aria-label="Permalink to &quot;快速上手&quot;">​</a></h2><h3 id="作为模块单独使用" tabindex="-1">作为模块单独使用 <a class="header-anchor" href="#作为模块单独使用" aria-label="Permalink to &quot;作为模块单独使用&quot;">​</a></h3><p><strong>安装</strong></p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-3zIOT" id="tab-5Qf1CUX" checked="checked"><label for="tab-5Qf1CUX">npm</label><input type="radio" name="group-3zIOT" id="tab-bqKH6vj"><label for="tab-bqKH6vj">pnpm</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> caring-css</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> caring-css</span></span></code></pre></div></div></div><p><strong>使用</strong></p><p>在 <code>App.vue </code>内引入全局样式</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark has-highlighted vp-code"><code><span class="line highlighted warning"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">不能有 scope lang=&quot;scss&quot; 不是必须的</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;caring-css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>在 <code>main.js</code> 中引入</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;caring-css&#39;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">建议</p><p>一般来讲如果是第三方库的内容，推荐在 <code>man.js</code> 内引入。<code>App.vue</code> 内集成的样式为该项目使用的特有全局样式。</p></div><h3 id="在-caring-ui-中使用" tabindex="-1">在 <code>caring-ui</code> 中使用 <a class="header-anchor" href="#在-caring-ui-中使用" aria-label="Permalink to &quot;在 \`caring-ui\` 中使用&quot;">​</a></h3><p><code>caring-ui</code> 已经内置了 <code>caring-css</code>, 可以直接使用，无需额外引入。</p><h2 id="模块" tabindex="-1">模块 <a class="header-anchor" href="#模块" aria-label="Permalink to &quot;模块&quot;">​</a></h2><p><code>caring-css</code> 包含如下模块：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-preflight</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 基础样式的重置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-layout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 布局模块</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-flex</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flex和grid模块</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-spacing</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 间距模块</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-dimension</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 尺寸模块</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-typography</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 排版模块</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-background</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 背景相关模块</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-border</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 边框相关模块</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-interactivity</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 互动性模块</span></span></code></pre></div><h2 id="基础样式-preflight" tabindex="-1">基础样式 Preflight <a class="header-anchor" href="#基础样式-preflight" aria-label="Permalink to &quot;基础样式 Preflight&quot;">​</a></h2><p>普通的h5项目会有浏览器的默认样式，为了统一风格，需要对默认样式初始化。uni项目已经内置了重置默认样式，<code>caring-css</code> 在保证和uni项目表现一致的情况下做了普通h5项目的默认样式兼容。</p><details class="details custom-block"><summary>查看代码</summary><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 标题无样式</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inherit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-weight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inherit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 列表无样式</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ul</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  list-style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 全局盒模型和无内外边距</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::before</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::after</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  box-sizing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">border-box</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 全局字体大小和颜色, 移动端字体14px,pc端浏览器的默认font-size就是16px</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#333</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">#app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></details><h2 id="布局-layout" tabindex="-1">布局 Layout <a class="header-anchor" href="#布局-layout" aria-label="Permalink to &quot;布局 Layout&quot;">​</a></h2><h3 id="box-sizing" tabindex="-1">Box Sizing <a class="header-anchor" href="#box-sizing" aria-label="Permalink to &quot;Box Sizing&quot;">​</a></h3><p>盒模型</p><table><thead><tr><th>类名</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>box-border</code></td><td><code>box-sizing: border-box</code></td><td></td></tr><tr><td><code>box-content</code></td><td><code>box-sizing: content-box</code></td><td></td></tr></tbody></table><h3 id="display" tabindex="-1">Display <a class="header-anchor" href="#display" aria-label="Permalink to &quot;Display&quot;">​</a></h3><p>控制元素显示类型的功能类</p><table><thead><tr><th>类名</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>block</code></td><td><code>display: block</code></td><td></td></tr><tr><td><code>inline-block</code></td><td><code>display: inline-block</code></td><td></td></tr><tr><td><code>inline</code></td><td><code>display: inline</code></td><td></td></tr><tr><td><code>inline-flex</code></td><td><code>display: inline-flex;</code></td><td>使得该元素变为行内flex容器，自适应子元素的大小</td></tr><tr><td><code>block</code></td><td><code>display: block;</code></td><td></td></tr><tr><td><code>none</code> <code>hidden</code></td><td><code>display: none;</code></td><td></td></tr><tr><td><code>grid</code></td><td><code>display: grid;</code></td><td></td></tr></tbody></table><h3 id="浮动" tabindex="-1">浮动 <a class="header-anchor" href="#浮动" aria-label="Permalink to &quot;浮动&quot;">​</a></h3><p>控制元素周围内容浮动</p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>现在基本都是使用 <code>flex</code> 布局，基本用不到浮动</p></div><table><thead><tr><th>类名</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>float-right</code></td><td><code>float: right;</code></td><td></td></tr><tr><td><code>float-left</code></td><td><code>float: left;</code></td><td></td></tr><tr><td><code>float-none</code></td><td><code>float: none;</code></td><td></td></tr><tr><td><code>clear-both</code></td><td><code>clear: both;</code></td><td>清除浮动</td></tr></tbody></table><h3 id="溢出-overflow" tabindex="-1">溢出 overflow <a class="header-anchor" href="#溢出-overflow" aria-label="Permalink to &quot;溢出 overflow&quot;">​</a></h3><p>用于控制元素如何处理超出容器的内容的功能类</p><table><thead><tr><th>类名</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>overflow-auto</code></td><td><code>overflow: auto;</code></td><td>在一个元素的内容溢出该元素的边界时为其添加滚动条。即只在需要滚动时才会显示</td></tr><tr><td><code>overflow-hidden</code></td><td><code>overflow: hidden;</code></td><td>处理父子元素产生的外边距塌陷时很好用</td></tr><tr><td><code>overflow-visible</code></td><td><code>overflow: visible;</code></td><td>防止元素内的内容被剪切。<strong>任何溢出元素边界的内容都将是可见的。</strong></td></tr><tr><td><code>overflow-scroll</code></td><td><code>overflow: scroll;</code></td><td>总是显示滚动条</td></tr></tbody></table><h3 id="定位" tabindex="-1">定位 <a class="header-anchor" href="#定位" aria-label="Permalink to &quot;定位&quot;">​</a></h3><table><thead><tr><th>类名</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>relative</code></td><td><code>position: relative;</code></td><td>当需要给元素设置层级时，指定这个属性才会生效</td></tr><tr><td><code>absolute</code></td><td><code>position: absolute;</code></td><td>绝对定位</td></tr><tr><td><code>fixed</code></td><td><code>position: fixed;</code></td><td>固定定位</td></tr><tr><td><code>sticky</code></td><td><code>position: sticky;</code></td><td></td></tr><tr><td><code>inset-0</code></td><td><code>top: 0; right: 0; bottom: 0; left: 0;</code></td><td></td></tr><tr><td><code>inset-x-0</code></td><td><code>left: 0; right: 0;</code></td><td></td></tr><tr><td><code>inset-y-0</code></td><td><code>.inset-y-0</code></td><td></td></tr><tr><td><code>top-{n}</code> <code>right-{n}</code> <code>left-{n}</code> <code>bottom-{n}</code></td><td><code>left: {n}px;</code></td><td>n说明：<br>-15～15px：2和5的倍数递增<br> 15～50px：5的整数倍递增<br> -15～-50px：5的整数倍递增</td></tr></tbody></table><h3 id="可见性" tabindex="-1">可见性 <a class="header-anchor" href="#可见性" aria-label="Permalink to &quot;可见性&quot;">​</a></h3><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>visible</code></td><td><code>visibility: visible;</code></td><td></td></tr><tr><td><code>invisible</code></td><td><code>visibility: hidden;</code></td><td>元素隐藏但是占据位置</td></tr></tbody></table><h3 id="层级" tabindex="-1">层级 <a class="header-anchor" href="#层级" aria-label="Permalink to &quot;层级&quot;">​</a></h3><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>z-{n}</code></td><td><code>z-index: {n}</code></td><td>n: 0-5</td></tr><tr><td><code>-z-1</code></td><td><code>z-index: -1;</code></td><td></td></tr><tr><td><code>z-max</code></td><td><code>z-index: 9999;</code></td><td></td></tr><tr><td><code>z-min</code></td><td><code>z-index: -9999;</code></td><td></td></tr><tr><td><code>z-auto</code></td><td><code>z-index: auto;</code></td><td></td></tr></tbody></table><h2 id="flex-and-grid" tabindex="-1">Flex and Grid <a class="header-anchor" href="#flex-and-grid" aria-label="Permalink to &quot;Flex and Grid&quot;">​</a></h2><h3 id="快速布局" tabindex="-1">快速布局 <a class="header-anchor" href="#快速布局" aria-label="Permalink to &quot;快速布局&quot;">​</a></h3><p>一些较常用的布局类</p><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>flex-center</code></td><td><code>display: flex;</code><br><code>align-items: center;</code></td><td>水平居中</td></tr><tr><td><code>flex-col-center</code></td><td><code>display: flex;</code><br><code>flex-direction: column;</code><br><code>align-items: center;</code></td><td>纵向flex布局水平居中</td></tr><tr><td><code>flex-cc</code></td><td><code>display: flex;</code><br><code>align-items: center;</code><br><code>justify-content: center;</code></td><td>水平垂直居中</td></tr><tr><td><code>grid-{n}</code></td><td></td><td>快速实现一个等分的gird宫格布局<br>n: 1-6</td></tr></tbody></table><h3 id="flex-direction" tabindex="-1">Flex Direction <a class="header-anchor" href="#flex-direction" aria-label="Permalink to &quot;Flex Direction&quot;">​</a></h3><table><thead><tr><th>class</th><th>css</th></tr></thead><tbody><tr><td><code>flex-row</code></td><td><code>display: flex;</code><br> <code>flex-direction: row;</code></td></tr><tr><td><code>flex-row-reverse</code></td><td><code>display: flex;</code><br> <code>flex-direction: row-reverse;</code></td></tr><tr><td><code>flex-col</code></td><td><code>display: flex;</code> <br><code>flex-direction: column;</code></td></tr><tr><td><code>flex-col-reverse</code></td><td><code>display: flex;</code> <br><code>flex-direction: column-reverse;</code></td></tr></tbody></table><h3 id="flex-wrap" tabindex="-1">Flex Wrap <a class="header-anchor" href="#flex-wrap" aria-label="Permalink to &quot;Flex Wrap&quot;">​</a></h3><p>控制Flex子项换行的功能类</p><table><thead><tr><th>class</th><th>css</th></tr></thead><tbody><tr><td><code>flex-wrap</code></td><td><code>display: flex;</code><br> <code>flex-wrap: wrap;</code></td></tr><tr><td><code>flex-wrap-reverse</code></td><td><code>display: flex;</code><br> <code>flex-wrap: wrap-reverse;</code></td></tr><tr><td><code>flex-nowrap</code></td><td><code>display: flex;</code> <br><code>flex-wrap: nowrap;</code></td></tr></tbody></table><h3 id="flex" tabindex="-1">Flex <a class="header-anchor" href="#flex" aria-label="Permalink to &quot;Flex&quot;">​</a></h3><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>flex-initial</code></td><td><code>flex: 0 1 auto;</code></td><td>只缩小不放大 允许 flex 项目在考虑到其初始尺寸的情况下<strong>缩小但不放大</strong>（会被压缩） 也是一个元素变为flex容器后，其flex项目的默认flex属性</td></tr><tr><td><code>flex-{n}</code></td><td><code>flex: {n} 1 0%;</code></td><td>n:0-6 允许 flex 项目根据需要放大和缩小，忽略其初始尺寸。 当存在多余空间时，会自动充满剩余空间 fle: 1 === flex: 1 1 0% flex: 0 === flex 0 1 0%，flex0项目完全压缩为子元素宽度</td></tr><tr><td><code>flex-auto</code></td><td><code>flex: 1 1 auto;</code></td><td>允许一个 flex 项目在考虑到其初始大小的情况下放大和缩小</td></tr><tr><td><code>flex-none</code></td><td><code>flex: none;</code></td><td>阻止一个 flex 项目的放大和缩小，弹性失效 相当于flex-shrink-0的效果</td></tr><tr><td><code>flex-grow-0</code></td><td><code>flex-grow: 0;</code></td><td></td></tr><tr><td><code>flex-grow</code></td><td><code>flex-grow: 1;</code></td><td>允许一个 flex 项目放大，以填充任何可用空间 相当于flex-1的效果</td></tr><tr><td><code>flex-shrink-0</code></td><td><code>flex-shrink: 0;</code></td><td>阻止一个 flex 项目缩小 相当于flex-none</td></tr><tr><td><code>flex-shrink</code></td><td><code>flex-shrink: 1;</code></td><td>flex项目的默认属性</td></tr></tbody></table><h3 id="order" tabindex="-1">Order <a class="header-anchor" href="#order" aria-label="Permalink to &quot;Order&quot;">​</a></h3><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>order-{n}</code></td><td><code>order: {n};</code></td><td>n:1-6</td></tr><tr><td><code>order-first</code></td><td><code>order: -9999;</code></td><td></td></tr><tr><td><code>order-last</code></td><td><code>order: 9999;</code></td><td></td></tr></tbody></table><h3 id="justify-content" tabindex="-1">Justify Content <a class="header-anchor" href="#justify-content" aria-label="Permalink to &quot;Justify Content&quot;">​</a></h3><p>用于控制 flex 和 grid 项目如何沿着容器的主轴定位的功能类。</p><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>justify-start</code></td><td><code>justify-content: flex-start;</code></td><td></td></tr><tr><td><code>justify-end</code></td><td><code>justify-content: flex-end;</code></td><td></td></tr><tr><td><code>justify-center</code></td><td><code>justify-content: center;</code></td><td></td></tr><tr><td><code>justify-between</code></td><td><code>justify-content: space-between;</code></td><td></td></tr><tr><td><code>justify-around </code></td><td><code>justify-content: space-around;</code></td><td>(使每个项目两侧的距离相等。</td></tr><tr><td><code>justify-evenly</code></td><td><code>justify-content: space-evenly;</code></td><td>使每个项目周围的距离相等,但不像使用 justify-around 时项目之间有双倍的距离。</td></tr></tbody></table><h3 id="align-content" tabindex="-1">Align Content <a class="header-anchor" href="#align-content" aria-label="Permalink to &quot;Align Content&quot;">​</a></h3><p>用于控制在多行 flex 和grid容器中行的位置的功能类。</p><table><thead><tr><th>class</th><th>css</th></tr></thead><tbody><tr><td><code>content-start</code></td><td><code>align-content: flex-start;</code></td></tr><tr><td><code>content-center</code></td><td><code>align-content: center;</code></td></tr><tr><td><code>content-end</code></td><td><code>align-content: flex-end;</code></td></tr><tr><td><code>content-between</code></td><td><code>align-content: space-between;</code></td></tr><tr><td><code>content-around</code></td><td><code>align-content: space-around;</code></td></tr><tr><td><code>content-evenly</code></td><td><code>align-content: space-evenly;</code></td></tr></tbody></table><h3 id="align-items" tabindex="-1">Align Items <a class="header-anchor" href="#align-items" aria-label="Permalink to &quot;Align Items&quot;">​</a></h3><p>用于控制 Flex 和Grid项目如何在容器的交叉轴定位的功能类。</p><table><thead><tr><th>class</th><th>css</th></tr></thead><tbody><tr><td><code>items-start</code></td><td><code>align-items: flex-start;</code></td></tr><tr><td><code>items-end</code></td><td><code>align-items: flex-end;</code></td></tr><tr><td><code>items-center</code></td><td><code>align-items: flex-center;</code></td></tr><tr><td><code>items-baseline</code></td><td><code>align-items: flex-baseline;</code></td></tr><tr><td><code>items-stretch</code></td><td><code>align-items: flex-stretch;</code></td></tr></tbody></table><h3 id="align-self" tabindex="-1">Align Self <a class="header-anchor" href="#align-self" aria-label="Permalink to &quot;Align Self&quot;">​</a></h3><p>用于控制单个 flex 或grid 项目如何沿其容器的交叉轴定位的功能类。</p><table><thead><tr><th>class</th><th>css</th></tr></thead><tbody><tr><td><code>self-auto</code></td><td><code>align-self: auto;</code></td></tr><tr><td><code>self-start</code></td><td><code>align-self: start;</code></td></tr><tr><td><code>self-end</code></td><td><code>align-self: end;</code></td></tr><tr><td><code>self-center</code></td><td><code>align-self: center;</code></td></tr><tr><td><code>self-stretch</code></td><td><code>align-self: stretch;</code></td></tr><tr><td><code>self-baseline</code></td><td><code>align-self: baseline;</code></td></tr></tbody></table><h3 id="grid" tabindex="-1">Grid <a class="header-anchor" href="#grid" aria-label="Permalink to &quot;Grid&quot;">​</a></h3><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>grid-cols-{n}</code></td><td><code>grid-template-columns: repeat({n}, minmax(0, 1fr));</code></td><td>用于在网格布局中指定列的功能类。</td></tr><tr><td><code>col-span-{n}</code></td><td><code>grid-column: span {n} / span {2};</code></td><td>用于控制在网格列中元素的大小和放置方式的功能类。<br>n：1-8从1开始，默认是1</td></tr><tr><td><code>gap-{size}</code></td><td><code>gap: {size}px</code></td><td></td></tr><tr><td><code>gap-x-{size}</code></td><td><code>column-gap: {size}px</code></td><td>size: 0-20之间2和5的倍数</td></tr><tr><td><code>gap-y-{size}</code></td><td><code>row-gap: {size}px</code></td><td></td></tr></tbody></table><h3 id="justify-items" tabindex="-1">Justify Items <a class="header-anchor" href="#justify-items" aria-label="Permalink to &quot;Justify Items&quot;">​</a></h3><p>用于控制网格项目如何沿其内联轴对齐的功能类。</p><table><thead><tr><th>class</th><th>css</th></tr></thead><tbody><tr><td><code>justify-items-start</code></td><td><code>justify-items: start;</code></td></tr><tr><td><code>justify-items-end</code></td><td><code>justify-items: end;</code></td></tr><tr><td><code>justify-items-center</code></td><td><code>justify-items: center;</code></td></tr><tr><td><code>justify-items-stretch</code></td><td><code>justify-items: stretch;</code></td></tr></tbody></table><h3 id="justify-self" tabindex="-1">Justify Self <a class="header-anchor" href="#justify-self" aria-label="Permalink to &quot;Justify Self&quot;">​</a></h3><p>用于控制单个网格项如何沿其内联轴对齐的功能类。</p><table><thead><tr><th>class</th><th>css</th></tr></thead><tbody><tr><td><code>justify-self-auto</code></td><td><code>justify-self: auto;</code></td></tr><tr><td><code>justify-self-start</code></td><td><code>justify-self: start;</code></td></tr><tr><td><code>justify-self-end</code></td><td><code>justify-self: end;</code></td></tr><tr><td><code>justify-self-center</code></td><td><code>justify-self: center;</code></td></tr><tr><td><code>justify-self-stretch</code></td><td><code>justify-self: stretch;</code></td></tr></tbody></table><h2 id="边距-spacing" tabindex="-1">边距 Spacing <a class="header-anchor" href="#边距-spacing" aria-label="Permalink to &quot;边距 Spacing&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">范围说明</p><p>0-50 px</p><ul><li>0px~25px：2和5的倍数</li><li>25px~50px：5的倍数</li></ul></div><h3 id="默认边距" tabindex="-1">默认边距 <a class="header-anchor" href="#默认边距" aria-label="Permalink to &quot;默认边距&quot;">​</a></h3><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>mt</code>，<code>ml</code>，<code>mr</code>，<code>mb</code>，<code>pt</code>，<code>pb</code>，<code>pl</code>，<code>pr</code>，<code>mx</code>，<code>my</code>，<code>px</code>，<code>py</code></td><td><code>margins-top: 15px;</code></td><td>不带后缀的默认边距</td></tr></tbody></table><h3 id="内边距" tabindex="-1">内边距 <a class="header-anchor" href="#内边距" aria-label="Permalink to &quot;内边距&quot;">​</a></h3><p>控制元素内边距的功能类</p><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>p</code></td><td><code>padding: 15px</code></td><td></td></tr><tr><td><code>p-{size}</code></td><td><code>padding: {size}px;</code></td><td></td></tr><tr><td><code>px-{size}</code>，<code>py-{size}</code>，<code>pt-{size}</code>，<code>pr-{size}</code>，<code>pb-{size}</code>，<code>pl-{size}</code></td><td></td><td>上下，左右，上，下，左，右指定数值内边距</td></tr></tbody></table><h3 id="外边距" tabindex="-1">外边距 <a class="header-anchor" href="#外边距" aria-label="Permalink to &quot;外边距&quot;">​</a></h3><p>控制元素外边距的功能类</p><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>m</code></td><td><code>margin: 15px</code></td><td></td></tr><tr><td><code>m-{size}</code></td><td><code>margin: {size}px;</code></td><td></td></tr><tr><td><code>mx-{size}</code>，<code>my-{size}</code>，<code>mt-{size}</code>，<code>mr-{size}</code>，<code>mb-{size}</code>，<code>ml-{size}</code></td><td></td><td>上下，左右，上，下，左，右指定数值外边距</td></tr></tbody></table><h2 id="尺寸-dimension" tabindex="-1">尺寸 Dimension <a class="header-anchor" href="#尺寸-dimension" aria-label="Permalink to &quot;尺寸 Dimension&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">范围说明</p><p>0-300px</p><ul><li>1-5之间：1px递增</li><li>5-30之间：2、5px递增</li><li>30-150: 5px递增</li><li>150-300：10px递增</li></ul></div><h3 id="宽度" tabindex="-1">宽度 <a class="header-anchor" href="#宽度" aria-label="Permalink to &quot;宽度&quot;">​</a></h3><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>w-{size}</code></td><td><code>width: {size}px</code></td><td></td></tr><tr><td><code>w-1-{n}</code></td><td>因为小程序css无法解析/，所以不能兼容 <code>tailwind</code> 中宽度百分比 <code>w-1/n</code> 的形式，将/改为-替代</td><td>百分比宽度<br>n: 2-5</td></tr><tr><td><code>w-full</code></td><td><code>width: 100%;</code></td><td></td></tr><tr><td><code>w-screen</code></td><td><code>width: 100vw;</code></td><td></td></tr><tr><td><code>w-auto</code></td><td><code>width: auto;</code></td><td></td></tr></tbody></table><h3 id="长度" tabindex="-1">长度 <a class="header-anchor" href="#长度" aria-label="Permalink to &quot;长度&quot;">​</a></h3><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>h-{size}</code></td><td><code>height: {size}px</code></td><td></td></tr><tr><td><code>h-1-{n}</code></td><td>因为小程序css无法解析/，所以不能兼容 <code>tailwind</code> 中宽度百分比 <code>h-1/n</code> 的形式，将/改为-替代</td><td>百分比高度<br>n: 2-5</td></tr><tr><td><code>h-full</code></td><td><code>height: 100%;</code></td><td></td></tr><tr><td><code>h-screen</code></td><td><code>height: 100vh;</code></td><td></td></tr><tr><td><code>h-auto</code></td><td><code>height: auto;</code></td><td></td></tr></tbody></table><h2 id="排版-typography" tabindex="-1">排版 Typography <a class="header-anchor" href="#排版-typography" aria-label="Permalink to &quot;排版 Typography&quot;">​</a></h2><h3 id="字体大小" tabindex="-1">字体大小 <a class="header-anchor" href="#字体大小" aria-label="Permalink to &quot;字体大小&quot;">​</a></h3><p>用来控制元素字体大小的功能类</p><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>text-base</code></td><td>font-size: 16px; <br>line-height: 24px;</td><td></td></tr><tr><td><code>text-{size}</code></td><td><code>font-size: {size}px</code></td><td>size: 10-16px</td></tr><tr><td><code>text-h1</code>，<code>text-28</code></td><td></td><td>一级标题</td></tr><tr><td><code>text-h2</code>，<code>text-24</code></td><td></td><td>二级标题</td></tr><tr><td><code>text-h3</code>，<code>text-20</code></td><td></td><td>三级标题</td></tr><tr><td><code>text-h4</code>，<code>text-18</code></td><td></td><td>四级标题</td></tr></tbody></table><h3 id="字体颜色" tabindex="-1">字体颜色 <a class="header-anchor" href="#字体颜色" aria-label="Permalink to &quot;字体颜色&quot;">​</a></h3><table><thead><tr><th>class</th></tr></thead><tbody><tr><td><code>text-red</code> ，<code>text-orange</code> ，<code>text-yellow</code> ，<code>text-green</code> ，<code>text-blue</code> ，<code>text-cyan</code>，<code>text-purple</code>，<code>text-mauve</code>，<code>text-pink</code>，<code>text-olive</code>，<code>text-brown</code>，<code>text-grey</code>，<code>text-gray</code>，<code>text-black</code>，<code>text-white</code>，<code>text-333</code>，<code>text-666</code>，<code>text-999</code>，<code>text-ccc</code>，<code>text-eee</code></td></tr></tbody></table><h3 id="字体样式" tabindex="-1">字体样式 <a class="header-anchor" href="#字体样式" aria-label="Permalink to &quot;字体样式&quot;">​</a></h3><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>italic</code></td><td><code>font-style: italic;</code></td><td>斜体</td></tr><tr><td><code>not-italic</code></td><td></td><td></td></tr></tbody></table><h2 id="背景-background" tabindex="-1">背景 Background <a class="header-anchor" href="#背景-background" aria-label="Permalink to &quot;背景 Background&quot;">​</a></h2><h3 id="背景颜色" tabindex="-1">背景颜色 <a class="header-anchor" href="#背景颜色" aria-label="Permalink to &quot;背景颜色&quot;">​</a></h3><p>内置的背景颜色</p><table><thead><tr><th>class</th></tr></thead><tbody><tr><td><code>bg-red</code>，<code>bg-red-light</code> ，<code>bg-orange</code>，<code>bg-orange-light</code> ，<code>bg-yellow</code>，<code>bg-yellow-light</code>，<code>bg-green</code>，<code>bg-green-light</code>， <code>bg-blue</code>，<code>bg-blue-light</code> ，<code>bg-cyan</code>，<code>bg-cyan-light</code> ，<code>bg-purple</code>，<code>bg-purple-light</code>，<code>bg-mauve</code>，<code>bg-mauve-light</code>， <code>bg-pink</code>，<code>bg-pink-light</code> ，<code>bg-olive</code>，<code>bg-olive-light</code> ，<code>bg-brown</code>，<code>bg-brown-light</code> ，<code>bg-grey</code>，<code>bg-grey-light</code>， <code>bg-gray</code>，<code>bg-black</code> ，<code>bg-white</code>，<code>bg-f8</code> ，<code>bg-ccc</code>，<code>bg-eee</code></td></tr></tbody></table><h3 id="背景属性" tabindex="-1">背景属性 <a class="header-anchor" href="#背景属性" aria-label="Permalink to &quot;背景属性&quot;">​</a></h3><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>bg-center</code></td><td><code>background-position: center;</code></td><td>背景图像位置</td></tr><tr><td><code>bg-no-repeat</code></td><td><code>background-repeat: no-repeat;</code></td><td>背景图像重复</td></tr><tr><td><code>bg-auto</code></td><td><code>background-size: auto;</code></td><td></td></tr><tr><td><code>bg-cover</code></td><td><code>background-size: cover;</code></td><td></td></tr><tr><td><code>bg-contain</code></td><td><code>background-size: contain;</code></td><td></td></tr></tbody></table><h2 id="边框-border" tabindex="-1">边框 Border <a class="header-anchor" href="#边框-border" aria-label="Permalink to &quot;边框 Border&quot;">​</a></h2><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>border</code></td><td><code>border: 1px solid #e4e7ed;</code></td><td></td></tr><tr><td><code>border-t</code> <code>border-r</code> <code>border-b</code> <code>border-l</code></td><td><code>border-top-width: 1px;</code></td><td></td></tr><tr><td><code>border-current</code></td><td><code>border-color: currentColor;</code></td><td></td></tr></tbody></table><h3 id="圆角" tabindex="-1">圆角 <a class="header-anchor" href="#圆角" aria-label="Permalink to &quot;圆角&quot;">​</a></h3><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>rounded</code></td><td><code>border-radius: 8px;</code></td><td>默认8px</td></tr><tr><td><code>rounded-full</code></td><td><code>border-radius: 9999px;</code></td><td>创建药丸形💊和圆圈（需指定宽高）。</td></tr><tr><td><code>rounded-{size}</code></td><td><code>border-radius: {size}px</code></td><td>size: 2-24 px之间 2和5的倍数</td></tr><tr><td><code>rounded-tl-{size}</code> <code>rounded-tr-{size}</code> <code>rounded-bl-{size}</code> <code>rounded-br-{size}</code></td><td><code>border-top-left-radius: {size}px</code></td><td>单个方向的圆角值</td></tr><tr><td><code>rounded-t-full</code> <code>rounded-r-full</code> <code>rounded-b-full</code> <code>rounded-l-full</code></td><td></td><td>单个边的最大化圆角</td></tr><tr><td><code>rounded-t-{size}</code> <code>rounded-r-{size}</code> <code>rounded-b-{size}</code> <code>rounded-l-{size}</code></td><td></td><td>单个边的圆角值</td></tr></tbody></table><h2 id="交互-interactivity" tabindex="-1">交互 Interactivity <a class="header-anchor" href="#交互-interactivity" aria-label="Permalink to &quot;交互 Interactivity&quot;">​</a></h2><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>appearance-none</code></td><td><code>appearance: none;</code></td><td>重置一个元素的所有浏览器特定样式。这个功能通常用于创建自定义表单组件。</td></tr><tr><td><code>select-none</code></td><td><code>user-select: none;</code></td><td></td></tr></tbody></table><h3 id="光标效果" tabindex="-1">光标效果 <a class="header-anchor" href="#光标效果" aria-label="Permalink to &quot;光标效果&quot;">​</a></h3><p>当鼠标悬停在一个元素上时，用于控制光标样式的功能类。</p><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>cursor-pointer</code></td><td><code>cursor: pointer;</code></td><td></td></tr><tr><td><code>cursor-wait</code></td><td><code>cursor: wait;</code></td><td></td></tr><tr><td><code>cursor-move</code></td><td><code>cursor: move;</code></td><td></td></tr><tr><td><code>cursor-not-allowed</code></td><td><code>cursor: not-allowed;</code></td><td></td></tr></tbody></table><h3 id="大小调整" tabindex="-1">大小调整 <a class="header-anchor" href="#大小调整" aria-label="Permalink to &quot;大小调整&quot;">​</a></h3><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>resize-none</code></td><td><code>resize: none;</code></td><td></td></tr><tr><td><code>resize-y</code></td><td><code>resize: vertical;</code></td><td></td></tr><tr><td><code>resize-x</code></td><td><code>resize: horizontal;</code></td><td></td></tr><tr><td><code>resize</code></td><td><code>resize: both;</code></td><td></td></tr></tbody></table><h2 id="其它-other" tabindex="-1">其它 Other <a class="header-anchor" href="#其它-other" aria-label="Permalink to &quot;其它 Other&quot;">​</a></h2><table><thead><tr><th>class</th><th>css</th><th>说明</th></tr></thead><tbody><tr><td><code>hover</code></td><td><code>&amp;:active { opacity: 0.6; }</code></td><td>用于点击时的激活效果</td></tr><tr><td><code>shadow</code></td><td><code>0 0 15px rgba(224, 224, 224, 0.35)</code></td><td>一个内置的阴影，如果项目内需要使用定制阴影，推荐在app.vue内定义 <code>bg-shadow</code></td></tr><tr><td><code>page</code></td><td><code>height: 100%; overflow: hidden;</code></td><td>一般只用在每个页面的最顶层元素，限制此页面宽度为屏幕宽度，不会被子元素撑开（适用于页面不存在滚动的情况）</td></tr><tr><td><code>safe-area-inset-bottom</code></td><td></td><td>底部安全区域</td></tr><tr><td><code>reset-button</code></td><td></td><td>重置按钮样式</td></tr></tbody></table>`,116),i=[o];function c(r,l,n,h,p,k){return e(),d("div",null,i)}const y=t(s,[["render",c]]);export{g as __pageData,y as default};
